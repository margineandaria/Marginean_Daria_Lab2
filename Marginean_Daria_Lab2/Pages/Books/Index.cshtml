@page "/"
@model Marginean_Daria_Lab2.Pages.Books.IndexModel
@{
    ViewData["Title"] = "Books";
}
<h1>Books</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by Book Title / Author Name:
            <input type="text" name="SearchString" value="@Model.CurrentFilter"
            />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>

<div class="row">
    <div class="col-md-8">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        <a asp-page="./Index" asp-route-sortOrder="@Model.TitleSort">
                            Title
                        </a>
                    </th>
                    <th>
                        <a asp-page="./Index" asp-route-sortOrder="@Model.AuthorSort">
                            Author
                        </a>
                    </th>
                    <th>
                        Price
                    </th>
                    <th>
                        Publishing Date
                    </th>
                    <th>
                        Publisher
                    </th>
                    <th>
                        Categories
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.BookD.Books)
                {
                    // Evidențiază rândul selectat
                    string selectedRow = "";
                    if (item.ID == Model.BookID)
                    {
                        selectedRow = "table-success"; // Clasa Bootstrap pentru rând verde
                    }
                    <tr class="@selectedRow">
                        <td>@Html.DisplayFor(modelItem => item.Title)</td>
                        <td>@Html.DisplayFor(modelItem => item.Author.FullName)</td>
                        <td>@Html.DisplayFor(modelItem => item.Price)</td>
                        <td>@Html.DisplayFor(modelItem => item.PublishingDate)</td>
                        <td>@Html.DisplayFor(modelItem => item.Publisher.PublisherName)</td>
                        <td>
                            @{
                                foreach (var category in item.BookCategories)
                                {
                                    @:@(category.Category.CategoryName)<br />
                                }
                            }
                        </td>
                        <td>
                            <a asp-page="./Index" asp-route-id="@item.ID">Select</a> |
                            <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                            <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                            <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="col-md-4">
        @if (Model.BookD.Categories != null)
        {
            <h3>Categories for Selected Book</h3>
            <table class="table">
                @foreach (var category in Model.BookD.Categories)
                {
                    <tr>
                        <td>
                            @category.CategoryName
                        </td>
                    </tr>
                }
            </table>
        }
    </div>
</div>